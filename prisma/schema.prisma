generator client {
  provider             = "prisma-client-js"
  interface            = "sync"
  recursive_type_depth = "-1"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id              String           @id @db.Uuid
  name            String
  Comments        Comment[]
  Dislikes        Dislike[]
  Favourites      Favourite[]
  InterestRegions InterestRegion[]
  Likes           Like[]
  Posts           Post[]
}

model Post {
  id           String      @id @default(uuid()) @db.Uuid
  profileId    String      @db.Uuid
  title        String
  latitude     Float
  longitude    Float
  locationText String
  description  String
  category     String      @default("Other")
  imageUrl     String?
  postedOn     DateTime    @default(now())
  Comments     Comment[]
  Dislikes     Dislike[]
  Favourites   Favourite[]
  Likes        Like[]
  creator      Profile     @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Like {
  postId    String  @db.Uuid
  profileId String  @db.Uuid
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@id([postId, profileId])
}

model Dislike {
  postId    String  @db.Uuid
  profileId String  @db.Uuid
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@id([postId, profileId])
}

model Comment {
  id        String   @id @default(uuid()) @db.Uuid
  postId    String   @db.Uuid
  profileId String   @db.Uuid
  content   String
  createdAt DateTime @default(now())
  post      Post     @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model InterestRegion {
  profileId String  @db.Uuid
  region    Json
  id        String  @id @default(uuid())
  name      String?
  user      Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Favourite {
  postId    String  @db.Uuid
  profileId String  @db.Uuid
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@id([postId, profileId])
}
