generator client {
  provider             = "prisma-client-js"
  interface            = "sync"
  recursive_type_depth = "-1"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id             String           @id @db.Uuid
  name           String
  Favourites     Favourite[]
  Likes          Like[]
  Posts          Post[]
  InterestRegion InterestRegion?
}

model Post {
  id           String      @id @default(uuid()) @db.Uuid
  profileId    String      @db.Uuid
  title        String
  latitude     Float
  longitude    Float
  locationText String
  category     String      @default("Other")
  description  String
  imageUrl     String[]
  Favourites   Favourite[]
  Likes        Like[]
  creator      Profile     @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Like {
  postId    String  @db.Uuid
  profileId String  @db.Uuid
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@id([postId, profileId])
}

model InterestRegion {
  profileId String  @id @db.Uuid
  region    Json
  user      Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
}

model Favourite {
  postId    String  @db.Uuid
  profileId String  @db.Uuid
  post      Post    @relation(fields: [postId], references: [id], onDelete: Cascade)
  user      Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@id([postId, profileId])
}
